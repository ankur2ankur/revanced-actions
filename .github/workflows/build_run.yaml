name: Build and Run

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: "Get Last commit short SHA"
      id: "commit_short_sha"
      run: |
        echo "LAST_SHORT_COMMIT_SHA=$(echo ${{ github.sha }} | cut -c 1-7)" >> $GITHUB_OUTPUT

    - name: "Repository Name in Lower Case"
      id: "repository_name"
      uses: ASzc/change-string-case-action@v2
      with:
        string: ${{ env.IMAGE_NAME }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      run: docker build -t ${{ steps.repository_name.outputs.lowercase }}:${{steps.commit_short_sha.outputs.LAST_SHORT_COMMIT_SHA}} .

    - name: Run Docker container
      run: |
        docker run --rm -v ${{ github.workspace }}/output:/app/output ${{ steps.repository_name.outputs.lowercase }}:${{steps.commit_short_sha.outputs.LAST_SHORT_COMMIT_SHA}}

    # - name: Upload output file
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: output-file
    #     path: output/

  # create-release:
  #   needs: build-and-test
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v3

  #   - name: Download output file
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: output-file

  #   - name: Create draft release
  #     id: create_release
  #     uses: actions/create-release@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       tag_name: ${{ github.sha }}
  #       release_name: Release ${{ github.sha }}
  #       draft: true
  #       prerelease: false

  #   - name: Upload output file to release
  #     uses: actions/upload-release-asset@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       upload_url: ${{ steps.create_release.outputs.upload_url }}
  #       asset_path: output/output-file.txt
  #       asset_name: output-file.txt
  #       asset_content_type: text/plain